<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.InsuranceSystem.Mapper.CustomerMapper">
	<!-- __________________________________sql_Include__________________________________________ -->	
	<sql id="customer">
		customerName
		, gender
		, phoneNo
		, residentNo
		, accountNumber
		, premium 
		, age
		, email
		, addInsuranceDate
		, maturityDate
		, job
		, medicalHistory
		, accidentHistory
		, buildingClass
	</sql>
	
	<sql id="account">
		accountNumber
		, customerName
		, money
	</sql>
	<!-- __________________________________insert__________________________________________ -->	
	<insert id="insert_Customer" parameterType="Customer">
		insert into
			customers(<include refid="customer"/>)
		values (
			#{customerName}
			, #{gender}
			, #{phoneNo}
			, #{residentNo}
			, #{accountNumber}
			, #{premium}
			, #{age}
			, #{email}
			, #{addInsuranceDate}
			, #{maturityDate}
			, #{job}
			, #{medicalHistory}
			, #{accidentHistory}
			, #{buildingClass});
	</insert>
	
	<insert id="insert_Customer_Account" parameterType="Account">
		insert into
			account(<include refid="account"/>)
		values (
			#{accountNumber}
			, #{customerName}
			, #{money});
	</insert>
	
	
	<!-- __________________________________select__________________________________________ -->
	<select id="select_Customer" resultType="Customer">
		select
			customerID
			, customerName
			, gender
			, phoneNo
			, residentNo
			, age
			, email
			, accountNumber
			, premium
			, addInsuranceDate
			, maturityDate
			, accidentHistory
			, job
			, medicalHistory
			, buildingClass
			, state
		from 
			Customers
		where
			state = 0;
	</select>

	<select id="select_Customer_by_name_residentNo" parameterType="String" resultType="String">
		select
			customerID
		from
			Customers
		where
			customerName = #{name} and residentNo = #{residentNo};
	</select>
	
	<select id="select_ApprovedCustomer" resultType="Customer">
		select
			customerID
			, customerName
			, gender
			, phoneNo
			, residentNo
			, age
			, email
			, accountNumber
			, premium
			, addInsuranceDate
			, maturityDate
			, accidentHistory
			, job
			, medicalHistory
			, buildingClass
			, state
		from 
			Customers
		where
			state = 1;
	</select>

	<select id="select_ApprovedCustomer_by_name" parameterType="String" resultType="Customer">
		select
			customerID
			, customerName
			, gender
			, phoneNo
			, residentNo
			, age
			, email
			, accountNumber
			, premium
			, addInsuranceDate
			, maturityDate
			, accidentHistory
			, job
			, medicalHistory
			, buildingClass
			, state
		from
			Customers
		where
			state = 1 and customerName like concat ('%', #{name}, '%');
	</select>

	<select id="select_ApprovedCustomer_by_id" parameterType="int" resultType="Customer">
		select
			customerID
			, customerName
			, gender
			, phoneNo
			, residentNo
			, age
			, email
			, accountNumber
			, premium
			, addInsuranceDate
			, maturityDate
			, accidentHistory
			, job
			, medicalHistory
			, buildingClass
			, state
		from
			Customers
		where
			state = 1 and customerID = #{id};
	</select>
	
	<select id="select_ApprovedCustomer_insuranceID" parameterType="int" resultType="Customer">
		select
			customerID
			, customerName
			, gender
			, phoneNo
			, residentNo
			, age
			, email
			, accountNumber
			, premium
			, addInsuranceDate
			, maturityDate
			, accidentHistory
			, job
			, medicalHistory
			, buildingClass
			, state
		from 
			Customers
		where
			state = 1 and customerID = #{customerID};
	</select>
	
	<!-- __________________________________delete__________________________________________ -->	
	<delete id="delete_Customer" parameterType="int">
		delete from 
			customers
		where
			customerID = #{customerID};
	</delete>
	
	<!-- __________________________________update__________________________________________ -->
	<update id="update_Customer" parameterType="Customer">
		update
			customers
		set
			customerName = #{customerName}
			, phoneNo = #{phoneNo}
			, residentNo = #{residentNo}
			, age = #{age}
			, email = #{email}
			, premium = #{premium}
			, addInsuranceDate = #{addInsuranceDate}
			, maturityDate = #{maturityDate}
			, accidentHistory = #{accidentHistory}
			, job = #{job}
			, medicalHistory = #{medicalHistory}
			, buildingClass = #{buildingClass}
		where
			customerID = #{customerID};
	</update>

<!--	subinfoID를 받아와서 고객 상태 변경 -->
	<update id="approve_Customer" parameterType="int">
		update
			customers
		set
			state = 1
		where
			customerID = (select customerID from SubInfo where subinfoID = #{id});
	</update>
	
	<update id="update_addInsuranceDate_Customer" parameterType="Customer">
		update
			customers
		set
			premium = #{premium}
			, addInsuranceDate = #{addInsuranceDate}
			, maturityDate = #{maturityDate}
		where
			customerID = #{customerID};
	</update>
</mapper>